diff -ru a/qtbase/mkspecs/common/icc-base-unix.conf b/qtbase/mkspecs/common/icc-base-unix.conf
--- a/qtbase/mkspecs/common/icc-base-unix.conf	2018-12-03 11:15:26.000000000 +0000
+++ b/qtbase/mkspecs/common/icc-base-unix.conf	2020-07-06 08:08:32.111968064 +0000
@@ -34,6 +34,9 @@
 QMAKE_CFLAGS_LTCG       = -ipo
 QMAKE_CFLAGS_DISABLE_LTCG = -no-ipo
 
+QMAKE_CFLAGS_C99       = -std=c99
+QMAKE_CFLAGS_C11       = -std=c11
+
 QMAKE_CFLAGS_SSE2      += -msse2
 QMAKE_CFLAGS_SSE3      += -msse3
 QMAKE_CFLAGS_SSSE3     += -mssse3
@@ -86,7 +89,7 @@
 
 QMAKE_LINK              = icpc
 QMAKE_LINK_SHLIB        = icpc
-QMAKE_LFLAGS            =
+QMAKE_LFLAGS            = -shared-intel -Wl,--disable-new-dtags -Wl,-rpath,\'\$$ORIGIN/../lib\'
 QMAKE_LFLAGS_RELEASE    =
 QMAKE_LFLAGS_DEBUG      =
 QMAKE_LFLAGS_THREAD     =
diff -ru a/qtbase/mkspecs/linux-icc/qmake.conf b/qtbase/mkspecs/linux-icc/qmake.conf
--- a/qtbase/mkspecs/linux-icc/qmake.conf	2018-12-03 11:15:26.000000000 +0000
+++ b/qtbase/mkspecs/linux-icc/qmake.conf	2020-07-06 08:08:32.114968041 +0000
@@ -16,7 +16,7 @@
 QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
 
 QMAKE_LFLAGS_APP        = -pie
-QMAKE_LFLAGS_SHLIB      = -shared -shared-intel
+QMAKE_LFLAGS_SHLIB      = -shared -Wl,-rpath,\'\$$ORIGIN\'
 QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
 QMAKE_LFLAGS_SONAME     = -Wl,-soname,
 QMAKE_LFLAGS_NOUNDEF    = -Wl,-z,defs
diff -ru a/qtbase/src/corelib/global/qnumeric_p.h b/qtbase/src/corelib/global/qnumeric_p.h
--- a/qtbase/src/corelib/global/qnumeric_p.h	2018-12-03 11:15:26.000000000 +0000
+++ b/qtbase/src/corelib/global/qnumeric_p.h	2020-07-06 08:08:32.118968009 +0000
@@ -224,7 +224,7 @@
 // size_t. Implementations for 8- and 16-bit types will work but may not be as
 // efficient. Implementations for 64-bit may be missing on 32-bit platforms.
 
-#if (defined(Q_CC_GNU) && (Q_CC_GNU >= 500) || (defined(Q_CC_INTEL) && !defined(Q_OS_WIN))) || QT_HAS_BUILTIN(__builtin_add_overflowx)
+#if (defined(Q_CC_GNU) && (Q_CC_GNU >= 500) || (defined(Q_CC_INTEL) && (Q_CC_GNU >= 500) && !defined(Q_OS_WIN))) || QT_HAS_BUILTIN(__builtin_add_overflowx)
 // GCC 5, ICC 18, and Clang 3.8 have builtins to detect overflows
 
 template <typename T> inline
 
