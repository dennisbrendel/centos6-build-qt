diff -ur a/qtbase/mkspecs/common/icc-base-unix.conf b/qtbase/mkspecs/common/icc-base-unix.conf
--- a/qtbase/mkspecs/common/icc-base-unix.conf	2020-07-14 14:28:26.623839096 +0200
+++ b/qtbase/mkspecs/common/icc-base-unix.conf	2020-07-15 09:15:43.706615894 +0200
@@ -34,6 +34,9 @@
 QMAKE_CFLAGS_LTCG       = -ipo
 QMAKE_CFLAGS_DISABLE_LTCG = -no-ipo
 
+QMAKE_CFLAGS_C99       = -std=c99
+QMAKE_CFLAGS_C11       = -std=c11
+
 QMAKE_CFLAGS_SSE2      += -msse2
 QMAKE_CFLAGS_SSE3      += -msse3
 QMAKE_CFLAGS_SSSE3     += -mssse3
@@ -86,7 +89,7 @@
 
 QMAKE_LINK              = icpc
 QMAKE_LINK_SHLIB        = icpc
-QMAKE_LFLAGS            =
+QMAKE_LFLAGS            = -shared-intel -Wl,--disable-new-dtags -Wl,-rpath,\'\$$ORIGIN/../lib\'
 QMAKE_LFLAGS_RELEASE    =
 QMAKE_LFLAGS_DEBUG      =
 QMAKE_LFLAGS_THREAD     =
diff -ur a/qtbase/mkspecs/linux-icc/qmake.conf b/qtbase/mkspecs/linux-icc/qmake.conf
--- a/qtbase/mkspecs/linux-icc/qmake.conf	2020-07-14 14:28:26.633839019 +0200
+++ b/qtbase/mkspecs/linux-icc/qmake.conf	2020-07-15 09:17:14.889863453 +0200
@@ -16,8 +16,8 @@
 QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
 
 QMAKE_LFLAGS_APP        = -pie
-QMAKE_LFLAGS_SHLIB      = -shared -shared-intel
-QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
+QMAKE_LFLAGS_SHLIB      = -shared -Wl,-rpath,\'\$$ORIGIN\'
+QMAKE_LFLAGS_PLUGIN     = -shared -Wl,-rpath,\'\$$ORIGIN/../../\'
 QMAKE_LFLAGS_SONAME     = -Wl,-soname,
 QMAKE_LFLAGS_NOUNDEF    = -Wl,-z,defs
 QMAKE_LFLAGS_RPATHLINK  = -Wl,-rpath-link,
Only in qt-everywhere-src-5.12.0.patched/qtbase/mkspecs/linux-icc: qmake.conf.rej
diff -ur a/qtbase/src/corelib/global/qnumeric_p.h b/qtbase/src/corelib/global/qnumeric_p.h
--- a/qtbase/src/corelib/global/qnumeric_p.h	2020-07-14 14:28:27.654831124 +0200
+++ b/qtbase/src/corelib/global/qnumeric_p.h	2020-07-15 09:15:48.222578594 +0200
@@ -224,7 +224,7 @@
 // size_t. Implementations for 8- and 16-bit types will work but may not be as
 // efficient. Implementations for 64-bit may be missing on 32-bit platforms.
 
-#if (defined(Q_CC_GNU) && (Q_CC_GNU >= 500) || (defined(Q_CC_INTEL) && !defined(Q_OS_WIN))) || QT_HAS_BUILTIN(__builtin_add_overflowx)
+#if (defined(Q_CC_GNU) && (Q_CC_GNU >= 500) || (defined(Q_CC_INTEL) && (Q_CC_GNU >= 500) && !defined(Q_OS_WIN))) || QT_HAS_BUILTIN(__builtin_add_overflowx)
 // GCC 5, ICC 18, and Clang 3.8 have builtins to detect overflows
 
 template <typename T> inline
diff -ur a/qtwebengine/mkspecs/features/gn_generator.prf b/qtwebengine/mkspecs/features/gn_generator.prf
--- a/qtwebengine/mkspecs/features/gn_generator.prf	2020-07-15 09:22:47.386096935 +0200
+++ b/qtwebengine/mkspecs/features/gn_generator.prf	2020-07-15 15:44:35.907119762 +0200
@@ -172,13 +172,9 @@
                "    ldflags = []"\
                "  }"
 GN_CONTENTS += "  ldflags += ["
-for (flag, QMAKE_LFLAGS): GN_CONTENTS += "    \"$$filter_flag_values($$flag)\","
-for (flag, GN_FLAGS): GN_CONTENTS += "    \"$$flag\","
-!isEmpty(QMAKE_RPATHDIR) {
-    for (rpath, QMAKE_RPATHDIR) {
-        unix:!macos: GN_CONTENTS += "    \"-Wl,-rpath=$${rpath}\","
-    }
-}
+GN_CONTENTS += "    \"-Wl,-rpath=$$ORIGIN\","
+GN_CONTENTS += "    \"-Wl,-rpath=$$ORIGIN/../\","
+
 !isEmpty(QMAKE_RPATHLINKDIR): GN_CONTENTS += "    \"-Wl,-rpath-link=$${QMAKE_RPATHLINKDIR}\","
 GN_CONTENTS += "  ]"
 
